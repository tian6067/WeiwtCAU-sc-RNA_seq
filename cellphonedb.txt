##R
library(Seurat)
library(SeuratData)
write.table(as.matrix(sheep@assays$RNA@data), 'cellphonedb_count.txt', sep='\t', quote=F)
meta_data <- cbind(rownames(sheep@meta.data), sheep@meta.data[,'orig.ident', drop=F])  
meta_data <- as.matrix(meta_data)
meta_data[is.na(meta_data)] = "Unkown" 
write.table(meta_data, 'pcellphonedb_meta.txt', sep='\t', quote=F, row.names=F)

##python
cellphonedb method statistical_analysis  cellphonedb_meta.txt  cellphonedb_count.txt --counts-data=gene_name 

##Visualization in R
all_pval =  read.table("pvalues.txt",header = T,sep = "\t",stringsAsFactors = F)
all_means =  read.table("means.txt",header = T,sep = "\t",stringsAsFactors = F) 
intr_pairs = all_pval$interacting_pair
all_pval = all_pval[,-c(1:11)]
all_means = all_means[,-c(1:11)]
sig_pairs <- all_pval
sig_pairs <- sig_pairs[,-c(1, 3:11)]
sig_pairs <- sig_pairs[which(rowSums(sig_pairs<=0.05)!=0), ]
selected_pairs <-c('PLXNB1_SEMA4D', 'NAMPT_P2RY6', 'COPA_P2RY6')
selected_pairs <-c('DSG2_DSC3', 'IGF2_IDE', 'EPHB3_EFNB1', 'EPHA4_EFNB1', 'IGF2_IGF2R', 'VEGFA_KDR', 'IGF2_IGF1R', 'IL10 receptor_IL10', 'NRP2_VEGFA', 'NRP1_VEGFA', 'NECTIN2_NECTIN3')
sel_pval = all_pval[match(selected_pairs, intr_pairs),]#selected_celltype]
sel_means = all_means[match(selected_pairs, intr_pairs),]# selected_celltype]
df_names = expand.grid(selected_pairs)   #, selected_celltype)
pval = unlist(sel_pval)
pval[pval==0] = 0.00001
plot.data = cbind(df_names,pval)
pr = unlist(as.data.frame(sel_means))
plot.data = cbind(plot.data,pr)
colnames(plot.data) = c( 'clusters', 'pvalue', 'mean')
plot.data$pair<-rownames(plot.data)
plot<-gsub('.{1}$','',plot.data$pair)
plot.data$pair<-plot
plot.data$clusters <- gsub('[|]', '_', plot.data$clusters)
my_palette <- colorRampPalette(c("darkblue","yellow","red"))(n=1000)
my_palette <- colorRampPalette(c("#313695", "#4575B4", "#ABD9E9", "#FFFFB3", "#FDAE61", "#F46D43", "#D73027", "#A50026"))(n=1000)
p<-ggplot(plot.data,aes(x=clusters,y=pair)) +
  geom_point(aes(size=-log10(pvalue + 0.001),color=mean)) +
  scale_size_continuous(range=c(1,5),breaks = c(0,1.0,2.0))+
  scale_color_gradientn('Mean expression', colors=my_palette,limits=c(0,3)) +
  coord_flip()+
  theme_bw() +
  theme(panel.grid.minor = element_blank(),
        panel.grid.major = element_blank(),
        axis.text=element_text(size=10, colour = "black"),
        axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0, size=10),
        axis.text.y = element_text(size=10, colour = "black"),
        axis.title=element_blank(),
        panel.border = element_rect(size = 0.7, linetype = "solid", colour = "black"))
p<-subset(p[["data"]],p[["data"]]$pvalue<0.5)
plot<-subset(plot.data,plot.data$pair%in%p$pair)
ggplot(plot,aes(x=clusters,y=pair)) +
  geom_point(aes(size=-log10(pvalue +0.0001),color=mean))+
  scale_color_gradientn("means",colors = c("#313695", "#4575B4", "#ABD9E9", "#FFFFB3", "#F46D43", "#D73027", "#A50026"))+
  theme_bw()+scale_size_continuous(range = c(1,3),name="-log10(pvals)")+
  theme(
    axis.title = element_blank(),
    axis.text.x.bottom = element_text(hjust = 1, angle = 90, size=10, color = "black"),
    axis.text.y.left = element_text(size = 12,color = "black"),
    axis.ticks.length = unit(0.15,"cm")
  )